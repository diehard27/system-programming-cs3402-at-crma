#summary การเขียนโปรแกรมด้วย Perl 2
<table width=500>
<td>
[CourseSchedule2555_2 กลับไปหน้าหลัก]-->[<a href="https://code.google.com/p/system-programming-cs3402-at-crma/wiki/CourseSchedule2555_2#ตารางเรียน_๒๕๕๕/๒">ตารางเรียน</a>]-->Next: [perlProg3 การโปรแกรม Perl 3]
<wiki:toc max_depth="3" />

การตั้งนามสกุลของเพิร์ลสคริปต์โดยทั่วไปจะตั้งเป็น .pl เช่น hello.pl เพื่อให้ป้องกันการสับสน (สามารถตั้งเป็นอย่างอื่นได้  
{{{
# hello.pl
print("Hello there\n");
}}}

การรันสคริปต์สามารถทำได้โดยเรียกใช้คำสั่ง perl จากพร็อมพ์ของเชลล์ เช่น
{{{
perl  hello.c
}}}
หากต้องการรันสคริปต์จากเชลล์ตรง ๆ ให้ใส่ในบรรทัดแรกของไฟล์สคริปต์ตำแหน่งที่จะใช้โปรแกรม perl สามารถค้นหาได้ด้วยคำสั่ง which
{{{
prachya@pcubusrv104> which perl
/usr/bin/perl
}}}
กำหนดว่าให้ใช้เพิร์ลไหน (บางครั้งในระบบมี perl หลายเวอร์ชั่น)
{{{
#!/usr/bin/perl
# hello.pl
print("Hello there\n");
}}}
จากนั้นตั้งให้สคริปต์มี permission แบบ executable ด้วยคำสั่ง chmod
{{{
chmod  +x  hello.pl
}}}
รันคำสั่งได้โดยตรงจากพร็อมท์
{{{
./hello.pl
}}}

=แบบของตัวแปร=
เพิร์ลมีตัวแปรข้อมูล 3 แบบคือ scalars, arrays (lists), และ associative arrays (hashes)  
==$x ตัวแปร scalar==
ตัวแปรแบบ scalar เป็นได้ทั้งตัวเลข อักษร หรือสตริง มีเครื่องหมาย $ นำหน้าตัวแปร (คล้าย ๆ ใน shell หรือ PHP)
ตัวอย่างโปรแกรมเพิร์ลที่ใช้ตัวแปร scalars
{{{
#scalars
$a = 7;
$b = 1.23;
$c = 'A';
$d = "willi";
$e = false;

print($a);
print("\n");    # newline
print($b."\n"); # using dot to concat
print("$b\n");
print("$c\n");
print($d."\n");
print($e."\n");
}}}

==@x ตัวแปร array หรือ lists==
ตัวแปรอาเรย์แบบมีดัชนี (indexed arrays) นั้นต้องนำหน้าชื่อตัวแปรด้วยเครื่องหมาย @ ดัชนีเริ่มต้นที่ศูนย์โดยที่การกำหนดค่าของสมาชิกจะใช้วงเล็บ โดยที่ค่าต่างๆ สามารถผสมกันได้ว่าจะเป็น scalar แบบใด ดังตัวอย่างด้านล่าง  การเรียกใช้ตัวแปรของอาเรย์จะใช้เครื่องหมาย $ นำหน้าพร้อมทั้งกำหนดค่าดัชนีให้ตรงกับค่าที่ต้องการ
{{{
#indexed arrays
@a1 = ( 3, 4, 5, 2, -1, 'a', 1.23, "ergonomic");
print(@a1);  # 3452-1a1.23ergonomic
print("\n");
print($a1[2]);  # element indexed 2 value => 5
print("\n");
}}}

==%x ตัวแปร associative array หรือ hashes==

{{{
# associative arrays
%id_num = ("Prachya", 23, "Narong", 21, "Surat", 37);
print($id_num{"Prachya"});  # return 23
print("\n");
print($id_num{"Surat"});  # return 37
print("\n");
}}}

=={{{$_}}} ตัวแปร global scalar==
ตัวแปรแบบ global scalar ที่ใช้มากในการเขียนเพิร์ลสคริปต์คือ {{{$_}}} สังเกตุการใช้งานจากตัวอย่างต่อไปนี้
{{{
# global.pl
$_ = 4; 
$a = 7; 
$b = $_ + $a; 
print("b = " + $b); # => 11 
print("\n");

$_ = "Chalermwat"; 
print($_); # => Chalermwat
}}}

ตัวอย่างต่อไปเป็นการใช้คำสั่งค้นหา s/search_string/target_string/options ในประโยคำสั่งของเพิร์ลกับตัวแปรแบบ global

{{{
#!/usr/bin/perl
# global2.pl
# in the following code block
# we replace the substring the by the string xxx

$_ = " the cat is in the house";
print($_."\n");
$str1 = "the";
s/$str1/xxx/g; # acts on $_
print("$_\n"); # => xxx cat is in xxx house
}}}
เมื่อรันสคริปต็ด้วยคำสั่ง {{{perl global2.pl}}} จะได้ผลลัพธ์ดังนี้
{{{
prachya@pcubusrv104> perl global2.pl
 the cat is in the house
 xxx cat is in xxx house
}}}

=Arithmetic Operators=
โอเปอเรเตอร์ทางคณิตศาสตร์ของเพิร์ลมีเช่นเดียวกับภาษาโปรแกรมระดับสูงคือ
|| Operator || Comment||
|| {{{+, -, *, /}}} || บวก, ลบ, คูณ, หาร||
|| % || ม็อดดูโล - หาเศษที่เหลือ ||
|| ++ || เพิ่มค่าขึ้นหนึ่ง ใช้ได้ทั้งแบบ pre-increment หรือ post-increment ||
|| -- || ลดค่าลงหนึ่ง ใช้ได้ทั้งแบบ pre-decrements หรือ post-decrements ||
|| {{{**}}} || ยกกำลัง ||

ตัวอย่างต่อไปในสคริปต์ arithmetic.pl แสดงการใช้งานโอเปอเรเตอร์แบบต่าง ๆ ของเพิร์ล
{{{
#!/usr/bin/perl
# arithmetic.pl

$a = 4; 
$b = 13; 
$c = $a + $b; 
print("The sum is: $c\n");
$d = $a - $b; 
print("The difference is: $d\n");
$e = $a*$b; 
print("The product is: $e\n");
$f = $b/$a; 
print("The division yields: $f\n"); # returns 3.25
$g = $b%$a; # remainder 
print("The remainder is: $g\n"); # returns 1
$a++; # post-increment 
++$a; # pre-increment; 
print("$a\n"); # returns 6
$b--; # post-decrement 
--$b; # pre-decrement 
print("$b\n"); # returns 11
# exponentiation operator is ** 
$x = 2.5; 
$y = 3.6; 
$z = $x ** $y; 
print("z = $z\n");
print("Done --- arithmetic.pl\n");
}}}
สังเกตุได้ว่าการใช้งานโอเปอเรเตอร์ทางคณิตศาสตร์ของเพิร์ลมีความสะดวกมากกว่าเชลล์สคริปต์ อีกทั้งยังมีขีดความสามารถในการคำนวณเลขทศนิยมได้เป็นอย่างดี 

={{{<STDIN>}}} Standard Input=
เพิร์ลสามารถอ้างถึงอินพุทจากเชลล์ผ่าน standard input โดยจะกำหนดชื่อตัวแปรเฉพาะว่า STDIN ใช้ร่วมกับเครื่องหมายน้อยกว่ามากว่า คือ {{{<STDIN>}}}

{{{
# stdin.pl
print("Enter the distance in kilometers: "); 
$dist = <STDIN>; 
chop($dist); 
$miles = $dist * 0.6214; 
print($dist, " kilometers = ", $miles, " miles\n");

print("Enter the distance in miles: "); 
$dist = <STDIN>; 
chop($dist); 
$kilometers = $dist * 1.609; 
print($dist, " miles = ", $kilometers, " kilometers\n");
}}}

เมื่อรันสคริปต์นี้จะได้ผลลัพธ์ดังต่อไปนี้
{{{
prachya@pcubusrv104> perl stdin.pl
Enter the distance in kilometers: 1.6
1.6 kilometers = 0.99424 miles
Enter the distance in miles: 1
1 miles = 1.609 kilometers
}}}

==ฟังก์ชัน chop()==
คำสั่ง chop ตัดอักษรสุดท้ายของตัวแปรออกไป (โดยทั่วไปแล้วใช้ในการกำจัดค่าแอสกี้ของ return/newline) ตัวอย่างต่อไปนี้ แสดงการทำงานของ chop()

{{{
$v = 'Flowers';
$r = chop($v);
print "$v (without $r)\n";
# displays Flower (without s)
}}}

=String Operation เบื้องต้น=
การใช้งานสตริงใน perl ไม่สลับซับซ้อนสตริงสามารถนำมาต่อกันได้โดยใช้จุด การเปรียบเทียบใช้ operator ที่ชื่อว่า cmp 

==Printing==
{{{
$a = "Prachya-"; 
$b = "Chalermwat"; 
print "$a$b"; # returns Prachya-Chalermwat 
print "\n";
}}}

==Concatenate==
{{{
# concatenate $c and $d 
# the concatenate operators is the . 
$c = "alpha-"; 
$d = "3"; 
$e = $c . $d; 
print $e; # returns alpha-3 
print "\n";
}}}

==Interpolation==
{{{
# interpolation 
$str1 = "apples"; 
$str2 = "pears"; 
print "$str1 and $str2"; # returns apples and pears 
print "\n";
}}}

==cmp - Comparison==
โอเปอเรเตอร์ cmp เป็นการเปรียบเทียบสตริงแบบ case-sensitive นั่นคืออักษรตัวเล็กตัวใหญ่ถือว่าต่างกัน ถ้าสตริงตรงกัน cmp จะให้ค่ากลับมาเป็น 0

{{{
# comparing strings with cmp 
$x = "egoli"; 
$y = "gauteng"; 
$z = $x cmp $y; 
print($z); 
print("\n");
}}}

{{{
$name1 = "willi"; 
$name2 = "willi"; 
$result = $name1 cmp $name2; 
print($result); 
print("\n");
}}}

{{{
$u = "X"; 
$v = "x"; 
$w = $u cmp $v; 
print("w = "); 
print($w."\n");
}}}

=String Functions=
||ฟังก์ชัน||คำอธิบาย||
||chomp||ลบ newlines และคืนค่าจำนวนอักษรที่ลบออกไป<br><font color=grey> ต.ย. {{{chomp ($name = <STDIN>);}}}</font>||
||chop||ลบอักษรสุดท้ายจากสตริง และคืนค่าของตัวอักษรที่ลบไป<br> ต.ย. {{{$r = chop($v);}}}||
||chr||แปลงค่า ASCII หรือ Unicode ให้เป็นตัวอักษร<br> ต.ย. {{{print chr(0x41), "\n";}}}||
||crypt||แปลงสตริงของรหัสผ่านให้อยู่ในรูป ASCII<br> ต.ย.{{{ $encryptedString = crypt $string, $salt}}} .[http://www.misc-perl-info.com/perl-crypt.html ..more]||
||hex||แปลงเลขฐานสิบหกให้เป็นค่าตัวเลข<br> ต.ย.{{{ }}} ||
||index||คืนค่าตำแหน่งของ substring ที่พบครั้งแรกในสตริงที่กำหนด<br> ต.ย.{{{ }}} ||
||lc||แปลงทุกอักษรในสตริงให้เป็นภาษาอังกฤษตัวเล็กและคืนค่าสตริงที่แปลง<br> ต.ย.{{{ }}} ||
||lcfirst||แปลงอักษรแรกของสตริงให้เป็นตัวเล็กแล้วคืนค่าสตริงที่แปลง<br> ต.ย.{{{ }}} ||
||length||คืนจำนวนตัวอักษร หรือไบท์ของสตริง<br> ต.ย.{{{ }}} ||
||oct||แปลงสตริงของเลขฐานแปดให้เป็นเลขฐานสิบ<br> ต.ย.{{{ }}} ||
||ord||แปลงอักษรให้เป็น ASCII/Unicode ที่กำหนด<br> ต.ย.{{{ }}} ||
||pack||แปลง list ให้เป็นสตริง, ตาม template ที่กำหนด<br> ต.ย.{{{ }}} ||
||q/STRING/||ใส่ single quote ให้สตริง<br> ต.ย.{{{ }}} ||
||qq/STRING/||ใส่ double quote ให้สตริง<br> ต.ย.{{{ }}} ||
||reverse||กลับลำดับของการเรียงสตริง<br> ต.ย.{{{ }}} ||
||rindex||คืนตำแหน่งของ substring อันสุดท้ายที่พบในสตริง<br> ต.ย.{{{ }}} ||
||sprintf||จำลองฟังก์ชัน sprintf ของภาษา C<br> ต.ย.{{{ }}} ||
||substr||แยก substring จากสตริงแล้วคืนค่า substring นั้น<br> ต.ย.{{{ }}} ||
||tr///||แปลงสตริงตามรูปแบบที่กำหนด<br> ต.ย.{{{ }}} ||
||uc||แปลงทุกอักษรในสตริงให้เป็นตัวใหญ่ แล้วคืนค่าที่แปลง<br> ต.ย.{{{ }}} ||
||ucfirst||แปลงเฉพาะอักษรแรกของสตริงให้เป็นตัวใหญ่ แล้วคืนค่าที่แปลง<br> ต.ย.{{{ }}} ||

=References=
  # Wiil-Hans Steeb, et al, _Linux, Shell Programming and Perl_ [http://issc.uj.ac.za/downloads/linux.pdf  PDF]
  # http://www.misc-perl-info.com/perl-string-functions.html
----
[CourseSchedule2555_2 กลับไปหน้าหลัก]-->[<a href="https://code.google.com/p/system-programming-cs3402-at-crma/wiki/CourseSchedule2555_2#ตารางเรียน_๒๕๕๕/๒">ตารางเรียน</a>]-->Next: [perlProg3 การโปรแกรม Perl 3]

[https://code.google.com/p/system-programming-cs3402-at-crma/w/edit/perlProg2 Edit]