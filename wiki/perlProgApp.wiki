#summary การประยุกต์ใช้ Perl
<table width=500>
<td>
[CourseSchedule2555_2 กลับไปหน้าหลัก]-->[<a href="https://code.google.com/p/system-programming-cs3402-at-crma/wiki/CourseSchedule2555_2#ตารางเรียน_๒๕๕๕/๒">ตารางเรียน</a>]-->Next: [perlProgApp2 การประยุกต์ใช้ Perl 2]
<wiki:toc max_depth="3" />

=Render SAR to HTML=
==SAR คืออะไร?==
SAR ย่อมาจาก System Activity Report ใช้สำหรับแสดงข้อมูลทางสถิติที่เกี่ยวกับระบบการทำงานของเครื่องแม่ข่ายหรือคอมพิวเตอร์ทั่วไป เช่น การใช้งานซีพียู เน็ตเวอร์ค หน่วยความจำ หรือดิสก์ โดย sar ที่รันในห้วงเวลาที่ต้องการ การติดตั้งบน Ubuntu เพียงแค่รันคำสั่ง sudo aptitude install atsar โดยที่ ผู้ใช้สามารถเรียกใช้งานด้วยคำสั่ง sar หรือ atsar ได้เนื่องจากเป็น symbolic ไปที่โปรแกรมเดียวกัน

การใช้งานแบบแรกกำหนดห้วงการเก็บข้อมูลในแต่ละแบบ โดยที่เก็บข้อมูลจาก kernel เป็น n ช่วงใน  t วินาที ค่า default ของ n เท่ากับ 1 และ t มีค่า >= 1
{{{
sar [ -flags ] t [ n ]
}}}
ยกตัวอย่างเช่น ต้องการทราบข้อมูลเกี่ยวกับการใช้งานหน่วยความจำ ทุก 1 วินาที 5 ครั้ง
{{{
prachya@pcubusrv104> sar -r 1 5

Linux  pcubusrv104  2.6.32-33-generic-pae  #70-Ubuntu SMP Thu Jul 7 22:51:12 UTC 2011  i686  11/14/2012

05:34:21  memtot memfree buffers   cached  slabmem      swptot swpfree  _mem_
05:34:22    488M     63M    185M     166M      32M        976M    976M
05:34:23    488M     63M    185M     166M      32M        976M    976M
05:34:24    488M     63M    185M     166M      32M        976M    976M
05:34:25    488M     63M    185M     166M      32M        976M    976M
05:34:26    488M     63M    185M     166M      32M        976M    976M
}}}

การเรียกใช้งาน sar
{{{
usage: atsar [-flags] t [n]              or
       atsar [-flags] [-s hh:mm] [-e hh:mm] [-i sec] [-n day# | -f file]
flags:
        -A      all flags
        -S      time-stamp for every output-line
        -u      cpu (default flag)
        -P      process load
        -d      disk
        -D      disk-partition
        -r      memory & swap
        -p      paging & swapping
        -I      interrupts
        -v      kernel-resources
        -y      tty activity
        -l      net-interf (general)
        -L      net-interf (errors)
        -w      ip   v4    (general)
        -W      ip   v4    (errors)
        -t      tcp  v4    (general)
        -T      tcp  v4    (errors)
        -U      udp  v4
        -m      icmp v4    (general)
        -M      icmp v4    (per type)
        -g      ip   v6    (general)
        -G      ip   v6    (errors)
        -j      tcp  v6    (general)
        -h      udp  v6
        -k      icmp v6    (general)
        -K      icmp v6    (per type)
        -N      nfs        (general)
        -E      nfs        (errors)
        -V      nfs        (server)
        -R      nfs-rpc    (%calls)
}}}

==Output ของ SAR==
ตัวอย่างการใช้งาน sar เพื่อเรียกดูสถิติการใช้งานของดิสก์ด้วยตัวเลือก -D
{{{
prachya@pcubusrv104> sar -D

Linux  pcubusrv104  2.6.32-33-generic-pae  #70-Ubuntu SMP Thu Jul 7 22:51:12 UTC 2011  i686  11/14/2012

00:00:01  partition   busy  read/s Kbyt/r   write/s Kbyt/w  avque avserv _part_
00:10:01  sda (8-0)     0%    0.00    0.0      0.06    6.2   1.02   6.05 ms
          sda3                0.00    0.0      0.06    6.2
00:20:01  sda (8-0)     0%    0.00    0.0      0.06    5.3   1.02   6.27 ms
          sda3                0.00    0.0      0.06    5.3
00:30:01  sda (8-0)     0%    0.00    0.0      0.05    5.6   1.02   6.27 ms
          sda3                0.00    0.0      0.05    5.6
00:40:01  sda (8-0)     0%    0.00    0.0      0.06    5.7   1.03   6.97 ms
          sda3                0.00    0.0      0.06    5.7
00:50:01  sda (8-0)     0%    0.00    0.0      0.05    5.6   1.02   6.00 ms
          sda3                0.00    0.0      0.05    5.6
01:00:01  sda (8-0)     0%    0.00    0.0      0.05    5.7   1.02   6.19 ms
          sda3                0.00    0.0      0.05    5.7
01:10:01  sda (8-0)     0%    0.00    0.0      0.07    6.2   1.38   7.60 ms
          sda3                0.00    0.0      0.06    6.3
          sda5                0.00    0.0      0.01    5.0
01:20:01  sda (8-0)     0%    0.00    0.0      0.06    5.7   1.03   6.74 ms
          sda3                0.00    0.0      0.06    5.7
01:30:02  sda (8-0)     0%    0.00    0.0      0.05    5.7   1.00   5.73 ms
          sda3                0.00    0.0      0.05    5.7
01:40:01  sda (8-0)     0%    0.00    0.0      0.07    5.9   1.01   6.18 ms
          sda3                0.00    0.0      0.07    5.9
01:50:01  sda (8-0)     0%    0.00    0.0      0.05    6.1   1.04   6.58 ms
          sda3                0.00    0.0      0.05    6.1
02:00:01  sda (8-0)     0%    0.00    0.0      0.05    6.1   1.00   5.10 ms
          sda3                0.00    0.0      0.05    6.1
02:10:01  sda (8-0)     0%    0.00    0.0      0.06    6.1   1.00   5.03 ms
          sda3                0.00    0.0      0.06    6.1
02:20:01  sda (8-0)     0%    0.00    0.0      0.05    6.1   1.04   6.06 ms
          sda3                0.00    0.0      0.05    6.1
02:30:01  sda (8-0)     0%    0.00    0.0      0.05    6.1   1.00   5.24 ms
          sda3                0.00    0.0      0.05    6.1
02:40:01  sda (8-0)     0%    0.00    0.0      0.06    5.9   1.00   5.37 ms
          sda3                0.00    0.0      0.06    5.9
02:50:01  sda (8-0)     0%    0.00    0.0      0.05    5.9   1.00   5.47 ms
}}}

ปรับผลลัพธ์ให้มีเฉพาะข้อมูลที่ต้องการด้วย grep
{{{
prachya@pcubusrv104> sar -D |grep "sda \|partition"
00:00:01  partition   busy  read/s Kbyt/r   write/s Kbyt/w  avque avserv _part_
00:10:01  sda (8-0)     0%    0.00    0.0      0.06    6.2   1.02   6.05 ms
00:20:01  sda (8-0)     0%    0.00    0.0      0.06    5.3   1.02   6.27 ms
00:30:01  sda (8-0)     0%    0.00    0.0      0.05    5.6   1.02   6.27 ms
00:40:01  sda (8-0)     0%    0.00    0.0      0.06    5.7   1.03   6.97 ms
00:50:01  sda (8-0)     0%    0.00    0.0      0.05    5.6   1.02   6.00 ms
01:00:01  sda (8-0)     0%    0.00    0.0      0.05    5.7   1.02   6.19 ms
01:10:01  sda (8-0)     0%    0.00    0.0      0.07    6.2   1.38   7.60 ms
01:20:01  sda (8-0)     0%    0.00    0.0      0.06    5.7   1.03   6.74 ms
01:30:02  sda (8-0)     0%    0.00    0.0      0.05    5.7   1.00   5.73 ms
01:40:01  sda (8-0)     0%    0.00    0.0      0.07    5.9   1.01   6.18 ms
01:50:01  sda (8-0)     0%    0.00    0.0      0.05    6.1   1.04   6.58 ms
02:00:01  sda (8-0)     0%    0.00    0.0      0.05    6.1   1.00   5.10 ms
02:10:01  sda (8-0)     0%    0.00    0.0      0.06    6.1   1.00   5.03 ms
02:20:01  sda (8-0)     0%    0.00    0.0      0.05    6.1   1.04   6.06 ms
02:30:01  sda (8-0)     0%    0.00    0.0      0.05    6.1   1.00   5.24 ms
02:40:01  sda (8-0)     0%    0.00    0.0      0.06    5.9   1.00   5.37 ms
02:50:01  sda (8-0)     0%    0.00    0.0      0.05    5.9   1.00   5.47 ms
03:00:01  sda (8-0)     0%    0.00    0.0      0.05    6.0   1.00   4.80 ms
03:10:01  sda (8-0)     0%    0.00    0.0      0.06    5.9   1.00   5.44 ms
03:20:01  sda (8-0)     0%    0.00    0.0      0.07    6.2   1.02   5.20 ms
03:30:01  sda (8-0)     0%    0.00    0.0      0.05    6.0   1.00   5.73 ms
03:40:01  sda (8-0)     0%    0.00    0.0      0.06    5.9   1.00   5.44 ms
03:50:01  sda (8-0)     0%    0.00    0.0      0.05    6.0   1.00   5.07 ms
04:00:01  sda (8-0)     0%    0.00    0.0      0.05    6.0   1.00   4.80 ms
04:10:01  sda (8-0)     0%    0.00    0.0      0.06    5.8   1.00   5.22 ms
04:20:01  sda (8-0)     0%    0.00    0.0      0.06    5.9   1.00   5.89 ms
04:30:01  sda (8-0)     0%    0.00    0.0      0.05    6.0   1.00   5.47 ms
04:40:01  sda (8-0)     0%    0.00    0.0      0.06    5.9   1.00   5.56 ms
04:50:01  sda (8-0)     0%    0.00    0.0      0.05    6.0   1.00   6.00 ms
05:00:01  sda (8-0)     0%    0.00    0.0      0.05    6.0   1.00   5.73 ms
05:10:01  sda (8-0)     0%    0.00    4.0      0.20    5.8   1.01   5.32 ms
05:20:01  sda (8-0)     0%    0.00    0.0      0.08    5.7   1.00   5.22 ms
05:30:01  sda (8-0)     0%    0.00    0.0      0.38    6.2   1.06   5.98 ms
}}}

เลือกอ่านข้อมูลดิสก์ด้วยตัวเลือก -d
{{{
prachya@pcubusrv104> sar -d | head -20

Linux  pcubusrv104  2.6.32-33-generic-pae  #70-Ubuntu SMP Thu Jul 7 22:51:12 UTC 2011  i686  11/14/2012

00:00:01  device            read/s rdKb/s   write/s wrKb/s        rdwr/s _disk_
00:10:01  disk008-000         0.00   0.00      0.06   0.38          0.06
00:20:01  disk008-000         0.00   0.00      0.06   0.33          0.06
00:30:01  disk008-000         0.00   0.00      0.05   0.28          0.05
00:40:01  disk008-000         0.00   0.00      0.06   0.33          0.06
00:50:01  disk008-000         0.00   0.00      0.05   0.28          0.05
01:00:01  disk008-000         0.00   0.00      0.05   0.29          0.05
01:10:01  disk008-000         0.00   0.00      0.07   0.41          0.07
01:20:01  disk008-000         0.00   0.00      0.06   0.33          0.06
01:30:02  disk008-000         0.00   0.00      0.05   0.29          0.05
01:40:01  disk008-000         0.00   0.00      0.07   0.43          0.07
01:50:01  disk008-000         0.00   0.00      0.05   0.31          0.05
02:00:01  disk008-000         0.00   0.00      0.05   0.29          0.05
02:10:01  disk008-000         0.00   0.00      0.06   0.35          0.06
02:20:01  disk008-000         0.00   0.00      0.05   0.33          0.05
02:30:01  disk008-000         0.00   0.00      0.05   0.29          0.05
02:40:01  disk008-000         0.00   0.00      0.06   0.35          0.06
}}}

สมมุติว่าเราสนใจแต่ประสิทธิภาพของการเขียนดิสก์ ในคอลัมน์ write/s และ wrKb/s เพื่อจะนำมา plot เป็นกราฟโดยใช้ Google Chart
==สกัดข้อมูลที่ต้องการด้วย awk==
ในบรรทัดที่มีข้อมูลจะมีข้อความ disk008 อยู่ดังนั้นเราจะสกัดข้อมูลที่ต้องการในคอลัมน์ 5 และ 6 ด้วย awk ดังนี้
{{{
sar -d |grep disk008 |awk '{print $1 "  " $5 "  " $6}'
}}}
จะได้ข้อมูลเชิงตัวเลขของของ เวลาที่บันทึก write/s และ wrKb/s ดังนี้ (ข้อมูลจริงยาวกว่านี้)
{{{
13:20:01 0.11 0.73
13:30:01 0.06 0.32
13:40:01 0.09 0.55
13:50:01 0.08 0.47
14:00:01 0.05 0.29
14:10:01 0.17 1.01
14:20:01 0.07 0.45
14:30:01 0.07 0.37
}}}

==วาดกราฟด้วย Google Chart==
ข้อมูลข้างต้นสามารถนำมาเขียนเป็น HTML เพื่อเรียกไลบรารี่ของ Google Chart เพื่อวาดกราฟให้ตามที่เราต้องการ ในกรณีนี้เราต้องการวาดกราฟ ยกตัวอย่าง กราฟใน http://10.134.64.45/prachya/perl/gchart-test1.html สามารถเขียนเป็น HTML (จากเว็บของ Google http://code.google.com/apis/ajax/playground/?type=visualization#line_chart) ได้ดังนี้

{{{
<!--
You are free to copy and use this sample in accordance with the terms of the
Apache license (http://www.apache.org/licenses/LICENSE-2.0.html)
-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>
      Google Visualization API Sample
    </title>
    <script type="text/javascript" src="http://www.google.com/jsapi"></script>
    <script type="text/javascript">
      google.load('visualization', '1', {packages: ['corechart']});
    </script>
    <script type="text/javascript">
      function drawVisualization() {
        // Create and populate the data table.
        var data = google.visualization.arrayToDataTable([
          ['x', 'Cats', 'Blanket 1', 'Blanket 2'],
          ['A',   1,       1,           0.5],
          ['B',   2,       0.5,         1],
          ['C',   4,       1,           0.5],
          ['D',   8,       0.5,         1],
          ['E',   7,       1,           0.5],
          ['F',   7,       0.5,         1],
          ['G',   8,       1,           0.5],
          ['H',   4,       0.5,         1],
          ['I',   2,       1,           0.5],
          ['J',   3.5,     0.5,         1],
          ['K',   3,       1,           0.5],
          ['L',   3.5,     0.5,         1],
          ['M',   1,       1,           0.5],
          ['N',   1,       0.5,         1]
        ]);
      
        // Create and draw the visualization.
        new google.visualization.LineChart(document.getElementById('visualization')).
            draw(data, {curveType: "function",
                        width: 500, height: 400,
                        vAxis: {maxValue: 10}}
                );
      }
      
      google.setOnLoadCallback(drawVisualization);
    </script>
  </head>
  <body style="font-family: Arial;border: 0 none;">
    <div id="visualization" style="width: 500px; height: 400px;"></div>
  </body>
</html>
}}}

จากตัวอย่าง HTML โค้ดข้างต้นเราจะใช้ perl ในการดึงข้อมูลสถิติของดิสก์ที่ได้ นำมาเขียนเป็นสคริปต์ที่เรียก API ของ Google Chart เพื่อสร้างกราฟที่ต้องการ




==References==
  * sar man page, http://zux221-127-001.adsl.green.ch/cgi-bin/man/man2html?atsar+1
  * http://theengguy.blogspot.com/2012/08/updated-sar2cvs-with-google-charts.html

=References=
  # Wiil-Hans Steeb, et al, _Linux, Shell Programming and Perl_ [http://issc.uj.ac.za/downloads/linux.pdf  PDF]
----
[CourseSchedule2555_2 กลับไปหน้าหลัก]-->[<a href="https://code.google.com/p/system-programming-cs3402-at-crma/wiki/CourseSchedule2555_2#ตารางเรียน_๒๕๕๕/๒">ตารางเรียน</a>]-->Next: [perlProgApp2 การประยุกต์ใช้ Perl 2]

[https://code.google.com/p/system-programming-cs3402-at-crma/w/edit/perlProgApp Edit]