#summary ภาษา C กับ System Programming
<table width=500>
<td>
[CourseSchedule2555_2 กลับไปหน้าหลัก]-->[<a href="https://code.google.com/p/system-programming-cs3402-at-crma/wiki/CourseSchedule2555_2#ตารางเรียน_๒๕๕๕/๒">ตารางเรียน</a>]-->Next: [cSysProg C กับ System Programming]
<wiki:toc max_depth="3" />

==FILE I/O==
การเขียนโปรแกรมติดต่อไฟล์บนระบบปฏิบัติการ Linux นั้นจำเป็นจะต้องมีการเปิดไฟล์ก่อน ซึ่งตัว kernel ได้สร้าง List ของไฟล์ที่เปิดอยู่ไว้ให เรียกว่า File Table ซึ่งใน File Table จะมีเลขดัชนีที่ไม่มีค่าติดลบ เรียกว่า File Descriptor (fds) ซึ่งจะมีรายละเอียดต่าง ๆ เกี่ยวกับการเปิดไฟล์ รวมถึงรายละเอียดเกี่ยวกับหน่วยความจำที่ใช้ในการเปิดไฟล์ด้วย

==inode==
inode, index node (ดัชนีโหนด)เป็นแนวคิดพื้นฐานใน Linux และ UNIX วัตถุในระบบแฟ้มแต่ละครั้งจะถูกแทนด้วย inode  ให้เราพยายามที่จะเข้าใจมันในคำง่ายๆ และแต่ละไฟล์ภายใต้ Linux (และ UNIX) มีคุณลักษณะดังต่อไปนี้ :

 * ชนิดไฟล์ (ปฏิบัติการป้องกัน ฯลฯ พิเศษ)

 * สิทธิ์ (อ่าน, เขียน ฯลฯ )

 * เจ้าของ

 * กลุ่ม

 * ขนาดไฟล์

 * เวลาในการเข้าถึงไฟล์ การเปลี่ยนแปลงและการปรับเปลี่ยน (จำ UNIX หรือ Linux ไม่เคยเก็บเวลาที่สร้างไฟล์ นี้เป็นคำถามที่ชื่นชอบถามใน UNIX / Linux ที่การสัมภาษณ์งาน sys admin)

 * เวลาลบไฟล์

 * Number ของการเชื่อมโยง (อ่อน / แข็ง)

 * คุณลักษณะเพิ่มเติมเช่นผนวกเพียงอย่างเดียวหรือไม่มีใครสามารถลบไฟล์รวมทั้งผู้ใช้ราก (เปลี่ยนไม่ได้)

 * รายการ Access Control (acl)

ข้อมูลทั้งหมดที่เก็บไว้ใน inode แต่ละครั้งจะถูกระบุโดยหมายเลขไอโหนดที่ไม่ซ้ำกันภายในระบบแฟ้ม inode ยังเป็นที่รู้ว่าเป็นตัวเลขดัชนี


สามารถใช้คำสั่ง ls – i เพื่อดูหมายเลขไอโหนดของไฟล์

{{{
$ ls - i / etc / passwd
}}}

===การประยุกต์ใช้ inode===

คำสั่งจำนวนมากที่ใช้โดยผู้ดูแลระบบในระบบปฏิบัติการ Unix / Linux ที่มักจะให้หมายเลขไอโหนดที่จะกำหนดไฟล์ ให้เราเห็นว่าโปรแกรมการปฏิบัติจำนวน inode พิมพ์คำสั่งต่อไปนี้

{{{
$ cd /tmp
$ touch \”la*
$ ls -l
1 file, 1 folder = 1 inode
}}}

==system call function==
เป็นฟังก์ชันระดับ Low-Level ของระบบปฏิบัติการ ซึ่งมีความรวดเร็วสูงในการทำงาน แต่มีข้อจำกัดคือฟังก์ชันจะผูกกับระบบปฏิบัติการนั้น ๆ และการใช้งานค่อนข้างยุ่งยาก

==open( ) System Call ==
เป็น system call ที่ใช้สำหรับเปิดไฟล์
{{{
#include <sys/types.h> 
#include <sys/stat.h> 
#include <fcntl.h> 
}}}
==close( ) System Call ==
เป็น system call ที่ใช้สำหรับปิดไฟล์


=References=
  # Wiil-Hans Steeb, et al, _Linux, Shell Programming and Perl_ (Chapter 2 File I/O)[http://issc.uj.ac.za/downloads/linux.pdf  PDF]
----
[CourseSchedule2555_2 กลับไปหน้าหลัก]-->[<a href="https://code.google.com/p/system-programming-cs3402-at-crma/wiki/CourseSchedule2555_2#ตารางเรียน_๒๕๕๕/๒">ตารางเรียน</a>]-->Next: [cSysProg C กับ System Programming]

[https://code.google.com/p/system-programming-cs3402-at-crma/w/edit/cSysProg Edit]