#summary ภาษา C กับ System Programming
<table width=500>
<td>
[CourseSchedule2555_2 กลับไปหน้าหลัก]-->[<a href="https://code.google.com/p/system-programming-cs3402-at-crma/wiki/CourseSchedule2555_2#ตารางเรียน_๒๕๕๕/๒">ตารางเรียน</a>]-->Next: [cSysProg C กับ System Programming]
<wiki:toc max_depth="3" />

==stdin,stdout,stderr==
ทั้ง stdin,stdout, และ stderr เป็น global variable ที่เป็นไฟล์หรือ stream ในภาษาซี โดยปกติเราจะทำการรับข้อมูลจาก stdin ก็คือคีย์บอร์ด และแสดงผลไปยัง stdout ซึ่งก็คือจอภาพ และเรายังสามารถเขียนโปรแกรมเก็บข้อผิดพลาดไปไว้ที่ stderr ได้อีกด้วย โดยใช้ฟังก์ชัน fprintf
fprintf เป็นฟังก์ชัน ที่ใช้แสดงผลคล้าย printf แต่แทนที่จะแสดงผลออกหน้าจอ จะไปเก็บผลไว้ที่ไฟล์แทน ตัวอย่างโค้ดด้านล่างเป็นการแสดงการใช้ fprintf ในการ redirect ข้อผิดพลาดไว้ใน stderr
{{{
  1 //stderr.c
  2 // by narong phoomsuk
  3 // usage : stderr.c string
  4 #include <stdio.h>
  5 int main(int argc,char* argv[]){
  6         if(argc != 2){
  7                 printf("usage %s string\n",argv[0]);
  8                 fprintf(stderr,"Invalid argument\n");
  9                 exit(1);
 10         }
 11         printf("string is %s",argv[1]);
 12         exit(0);
 13 }
}}}
จากโค้ดด้านบน บรรทัดที่ 5 จะมีการรับ argument ใส่ไปยังโปรแกรม บรรทัดที่ 6 จะตรวจสอบจำนวน argument รวมทั้งชื่อโปรแกรมว่ามีจำนวนมากกว่า 2 ตัวหรือไม่ ถ้ามีมากกว่า บรรทัดที่ 7 ให้แสดงข้อความ "usage <ชื่อโปรแกรม> string\n" ออกทางหน้าจอ หรือ stdout และบรรทัดที่ 8 จะให้แสดงข้อความ "Invalid argument\n" ออกทาง stderr โดยอาศัยฟังก์ชัน fprintf ช่วยแสดงข้อความไปยัง stderr บรรทัดที่ 9 จะเป็นการใช้ฟังก์ชัน exit() ซึ่งอยู่ใน library stdlib.h เพื่อหยุดการทำงานโปรแกรมและคืนค่า 1
หากเราทดลองรันโปรแกรมปกติ ผลของการรันโปรแกรมจะเป็นดังนี้



==FILE==
ไฟล์คือที่เก็บข้อมูลต่าง ๆ ของคอมพิวเตอร์ ในระบบปฏิบัติการลินุกซ์และภาษาซี อาจรวมไปถึงอุปกรณ์และทรัพยากรต่าง ๆ ที่ต่ออยู่กับเครื่องคอมพิวเตอร์ เช่น คีย์บอร์ด จอภาพ
การติดต่อไฟล์จะต้องทำผ่าน stream โดยไฟล์แบ่งออกได้เป็นแบบต่าง ๆ ดังนี้
 * Text file เป็นไฟล์ของตัวอักษร การเก็บไฟล์จะเป็นเลขฐานสองตามรหัสตัวอักขระของ ASCII ไม่สามารถเก็บข้อมูลที่เป็นค่าตัวเลข จุดทศนิยม หรือเป็นในลักษณะของโครงสร้างได้ ปกติไฟล์พวกนี้เราจะสามารถเปิดอ่านและเข้าใจได้
 * Binary file เป็นไฟล์เก็บข้อมูลที่เป็นเลขฐานสอง ซึ่งสามารถเก็บข้อมูลที่เป็นค่าตัวเลข จุดทศนิยม หรือข้อมูลในลักษณะเชิงโครงสร้างได้ การอ่านเขียนข้อมูลจะเป็นในลักษณะของไบต์ต่อไบต์ เราไม่สามารถทำความเข้าใจข้อมูลที่อยู่ในไฟล์พวกนี้ได้
การประกาศตัวแปรเพื่อติดต่อกับไฟล์มีรูปแบบดังนี้
{{{
FILE *<ชื่อไฟล์ที่เป็น Pointer>
เช่น
FILE *fp;
}}}

fopen 

เป็นฟังก์ชันที่ใช้ในการเปิดไฟล์ ซึ่งมีรูปแบบการเปิดไฟล์แบบดังนี้
||r||เปิดไฟล์เพื่ออ่าน||
||w||เปิดไฟล์เพื่อเขียน (จำเป็นต้องมีไฟล์อยู่ก่อน)||
||a ||เปิดไฟล์เพื่อเขียนต่อท้าย (จำเป็นต้องมีไฟล์อยู่ก่อน)||
||r+||เปิดไฟล์เพื่ออ่านและเขียนได้ โดยจะเริ่มเคอร์เซอร์ที่ต้นไฟล์||
||w+||เปิดไฟล์เพื่ออ่านและเขียน โดยจะเขียนทับไฟล์เดิม||
||a+||เปิดไฟล์เพื่ออ่านและเขียน โดยจะเขียนต่อท้ายไฟล์ถ้ามีไฟล์อยู่||


=References=
  # Wiil-Hans Steeb, et al, _Linux, Shell Programming and Perl_ [http://issc.uj.ac.za/downloads/linux.pdf  PDF]
----
[CourseSchedule2555_2 กลับไปหน้าหลัก]-->[<a href="https://code.google.com/p/system-programming-cs3402-at-crma/wiki/CourseSchedule2555_2#ตารางเรียน_๒๕๕๕/๒">ตารางเรียน</a>]-->Next: [cSysProg C กับ System Programming]

[https://code.google.com/p/system-programming-cs3402-at-crma/w/edit/cSysProg Edit]